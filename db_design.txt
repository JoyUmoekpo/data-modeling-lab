Features

users can sign into the app with their email and password

users can create recipes with ingredients and instructions

recipes can be marked as public or private

users can view other people’s recipes

ingredients from recipes can be added to user’s grocery lists

users can create their own occasions and assign recipes to occasions

Part 1 - Brainstorming

users 
    - user_id 
    - email 
    - password 
    - recipe_id 
    - grocerylist_id 
    - occasions_id

recipes 
    - recipe_id references users(recipe_id)
    - recipe_name 
    - ingredients_id references ingredients(ingredients_id) 
    - instructions
    - prep_time
    - security

ingredients 
    - ingredients_id
    - name
    - measurements

occasions 
    - occasions_id references users(occasions_id)
    - name
    - date
    - time
    - recipe_id references users(recipe_id)

grocery list
    - grocerylist_id references users(grocerylist_id)
    - ingredient_id references ingredients(ingredients_id)

Part 2 - Table Ideas

users: This table will hold information for the users. Each row will have the user's id, email, password, the id of their recipes, their grocery list id, and the id of their occasions.

recipes: This table will hold information for the user's recipes. Each row will have the recipe's id, name, ingredients, instructions, prep time, and security settings.

ingredients: This table will hold information for the ingredients. Each row will have the recipe's ids, their names, and their measurements.

occasions: This table will hold information for the occasions. Each row will have the occasion's id, name, date, time, and the recipes that would be used.

grocery_lists: This table will hold information for the grocery_lists. Each row will have the grocery list id and the ingredients on the grocery list.

Part 3 - Relationships

- One-to-one
    - 
- One-to-many
    - users
    - occasions
    - grocery lists
- Many-to-many
    - recipes
    - ingredients


Part 2 Step 2 - Columns

users 
    - user_id: We're storing this data because we want each user to have their unique id and this is an integer data type because it is a number. 

    - email: We're storing this data because it is a part of the login process and it is a varchar because it uses letters/characters/numbers.

    - password: We're storing this data because it is a part of the login process and it is a varchar because it uses letters/characters/numbers. 

    - recipe_id: We're storing this data because the recipes need their own unique id number and it would be a number (or integer).

    - grocerylist_id: We're storing this data because the grocery list id would be a unique number to the user and it would be a number. So, it must be an integer.

    - occasions_id: We're storing this data because each occasion is unique to a user and it is a number. So, it would be an integer.

recipes 
    - recipe_id references users(recipe_id): We're storing this data because the recipes need their own unique id number and it would be a number (or integer).

    - recipe_name: We're storing this data because it will a name defined by the user and it uses letters/characters/numbers. So, it is a varchar.

    - ingredients_id references ingredients(ingredients_id): We're storing this data because each ingredient is unique and needs its own id number. This is a number. So, it would be an integer.

    - instructions: We're storing this data because the recipes need steps. These use letters/characters/numbers. So, it is a varchar.

    - prep_time: We're storing this data because recipes usually include a prep time and it is a number (or an integer).

    - security: We're storing this data because some users may not want all recipes to be public. It uses letters/characters/numbers. So, it is a varchar.

ingredients 
    - ingredients_id: We're storing this data because each ingredient is unique and needs its own id number. This is a number. So, it would be an integer.

    - name: We're storing this data because it will have a unique name and it uses letters/characters/numbers. So, it is a varchar.

    - measurements: We're storing this data because ingredient require measurements. This would be a number for each ingredient. So, it would be an integer.

occasions 
    - occasions_id references users(occasions_id): We're storing this data because each occasion is unique to a user and it is a number. So, it would be an integer.

    - name:  We're storing this data because it will a name defined by the user and it uses letters/characters/numbers. So, it is a varchar.

    - date: We're storing this data because the occasion have dates and uses the date data type for its format.

    - time: We're storing this data because the occasion will be an a certain time. This will use the time data type.

    - recipe_id references users(recipe_id): We're storing this data because the recipes need their own unique id number and it would be a number (or integer).

grocery list
    - grocerylist_id references users(grocerylist_id):We're storing this data because the grocery list id would be a unique number to the user and it would be a number. So, it must be an integer.
    
    - ingredient_id references ingredients(ingredients_id): We're storing this data because each ingredient is unique and needs its own id number. This is a number. So, it would be an integer.